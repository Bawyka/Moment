<?php session_start();class Moment {		protected $mysqli = false;		public $user = false;		function __construct($fbopenid)	{		// Use the right host, db_username and database name		$this->mysqli = new mysqli(host, username, pass, db_name);		if ($mysqli->connect_error) {			die('Connect Error (' . $mysqli->connect_errno . ') ' . $mysqli->connect_error);		}				$session = session_id();				$this->user = $this->getUser($fbopenid,$session);	}		function getUser($fbopenid,$session=false)	{		if (!$fbopenid and !$session) return false;			if ($result = $this->mysqli->prepare('SELECT id,openid FROM user WHERE openid=? or session_id=? LIMIT 1'))		{			$result->bind_param('is',$fbopenid,$session);			$result->execute();			$result->bind_result($id,$fbopenid);						// fetch as object			while ($result->fetch())			{				$user->id = $id;				$user->fbopenid = $fbopenid;			}						$result->close();		}				// push to session_id field a current user's session		if ($result = $this->mysqli->prepare("UPDATE user SET session_id=? WHERE id=?"))		{			$result->bind_param('si',session_id(),$user->id);			$result->execute();			$result->close();		}				// also we can get a profile of this user		if ($result = $this->mysqli->prepare('SELECT username FROM userprofile WHERE user_id=?'))		{			$result->bind_param('i',$user->id);			$result->execute();			$result->bind_result($username);						while ($result->fetch()) $user->username = $username;						$result->close();		}				if ($result = $this->mysqli->prepare("SELECT m.name FROM moment m JOIN usermoments um ON um.moment_id=m.id AND um.user_id=?"))		{			$result->bind_param('i',$user->id);			$result->execute();			$result->bind_result($moment);						while ($result->fetch()) $user->moments[]=$moment;						$result->close();		}				return $user;	}		function checkIfTheRowExists($table,$row,$value)	{		$sql = "SELECT COUNT(*) c FROM `".trim($table)."` WHERE `".trim($row)."`=? LIMIT 1";		// проверяем пуста ли таблица, если да то вернет TRUE, если нет, то FALSE		if ($result = $this->mysqli->prepare($sql))		{			$result->bind_param('s',$value);						$result->execute();			$result->bind_result($c);			$result->fetch();			$result->close();													return ($c > 0 ? true : false);		}		}		// getting user id	function getUserIdByOpenFBId($fbopenid)	{		// 1238254040		if ($result = $this->mysqli->prepare("SELECT `id` FROM `user` WHERE `openid`=?"))		{			$result->bind_param("i",$fbopenid);			$result->execute();			$result->bind_result($id);			$result->fetch();			$result->close();		}				return $id;	}		// adding a user by his openid	function addUser($fbopenid,$username)	{		if ($this->checkIfTheRowExists('user','openid',$fbopenid)) return false;			if ($result = $this->mysqli->prepare("INSERT INTO `user`(`openid`) VALUES (?)"))		{			$result->bind_param("i",$fbopenid);			$result->execute();			$result->close();			$row_id = $this->mysqli->insert_id;		}				if ($result = $this->mysqli->prepare("INSERT INTO userprofile (user_id,username) VALUES (?,?)"))		{			$result->bind_param("is",$row_id,$username);			$result->execute();			$result->close();		}				return $row_id;	}		// adding a moment	function addMoment($mn)	{		if ($this->checkIfTheRowExists('moment','name',$mn))		{			if ($result = $this->mysqli->prepare("SELECT id FROM moment WHERE name=?"))			{							$result->bind_param("s",$mn);				$result->execute();				$result->bind_result($row_id);				$result->fetch();				$result->close();								return $row_id;			}		}				if ($result = $this->mysqli->prepare("INSERT INTO `moment`(`name`) VALUES (?)"))		{			$result->bind_param("s",$mn);			$result->execute();			$result->close();			$row_id = $this->mysqli->insert_id;		}				return $row_id;	}		// get moment id by moment name	function getMomentIdByName($mn)	{		if ($result = $this->mysqli->prepare("SELECT id FROM moment WHERE name=?"))		{			$result->bind_param("s",$mn);			$result->execute();			$result->bind_result($id);			$result->fetch();			$result->close();		}				return $id;	}		function getMomentName($id)	{		if ($result = $this->mysqli->prepare("SELECT name FROM moment WHERE id=?"))		{			$result->bind_param("i",$id);			$result->execute();			$result->bind_result($id);			$result->fetch();			$result->close();		}				return $id;	}		// adding a new tag	function addLabel($lb)	{		if ($this->checkIfTheRowExists('metki','metka',$lb))		{			if ($result = $this->mysqli->prepare("SELECT id FROM metki WHERE metka=?"))			{				$result->bind_param("s",$lb);				$result->execute();				$result->bind_result($lb_id);				$result->fetch();				$result->close();								return $lb_id;			}		}				if ($result = $this->mysqli->prepare("INSERT INTO `metki`(`metka`) VALUES (?)"))		{			$result->bind_param("s",$lb);			$result->execute();			$result->close();			$row_id = $this->mysqli->insert_id;		}				return $row_id;	}		// get tag id by name	function getTagIdByName($tn)	{		if ($result = $this->mysqli->prepare("SELECT `id` FROM `metki` WHERE `metka`=?"))		{			$result->bind_param("s",$tn);			$result->execute();			$result->bind_result($id);			$result->fetch();			$result->close();		}				return $id;	}		// get tag	function getTag($id)	{		if (!is_int($id)) return false;					if ($result = $this->mysqli->prepare("SELECT metka FROM metki WHERE id=? LIMIT 1"))		{			// echo "<b>Metka Id</b>.".$id.'<br />';			$result->bind_param("i",$id);			$result->execute();			$result->bind_result($metka);			$result->fetch();			$result->close();		}										return $metka;	}		function assignMomentToUser($user_id,$moment_id)	{		if ($result = $this->mysqli->prepare("INSERT INTO `usermoments` VALUES (?,?)"))		{			$result->bind_param("ii",$user_id,$moment_id);			$result->execute();			$result->close();		}			}		function assignUserLabel($moment_id,$metka_id)	{		if ($result = $this->mysqli->prepare("INSERT INTO `usermetki` VALUES (?,?,?)"))		{			$result->bind_param("iii",$this->user->id,$moment_id,$metka_id);			$result->execute();			$result->close();		}	}		function getMoments($user_id)	{		if ($result = $this->mysqli->prepare("SELECT m.name FROM moment m JOIN usermoments um ON um.moment_id=m.id JOIN user us WHERE um.user_id=? GROUP BY (m.name) ORDER BY m.name"))		{			$result->bind_param("i",$user_id);			$result->execute();			$result->bind_result($name);			while($result->fetch()) $moments[] = $name;			$result->close();		}				return $moments;	}		function getLabelsOfTheMoment($moment_id,$user_id)	{		if ($result = $this->mysqli->prepare("SELECT m.metka FROM metki m JOIN usermetki um ON um.metka_id=m.id WHERE um.moment_id=? AND um.user_id=? GROUP BY (m.metka) ORDER BY m.metka"))		{			$result->bind_param("ii",$moment_id,$user_id);			$result->execute();			$result->bind_result($metka);			while($result->fetch()) $metki[] = $metka;			$result->close();		}				return $metki;	}		function removeUserMoment($moment_id)	{		if ($result = $this->mysqli->prepare("DELETE FROM usermoments WHERE user_id=? AND moment_id=?"))		{			$result->bind_param("ii",$this->user->id,$moment_id);			$result->execute();			$result->close();		}				// moving also a labels of this moment		if ($result = $this->mysqli->prepare("DELETE FROM usermetki WHERE user_id=? AND moment_id=?"))		{			$result->bind_param("ii",$this->user->id,$moment_id);			$result->execute();			$result->close();		}				echo 1;	}		function removeMomentLabel($moment_id,$label_id)	{		if ($result = $this->mysqli->prepare("DELETE FROM usermetki WHERE user_id=? AND moment_id=? AND metka_id=?"))		{			$result->bind_param("iii",$this->user->id,$moment_id,$label_id);			$result->execute();			$result->close();		}	}		function getLabelsIds($moment_id)	{		if ($result = $this->mysqli->prepare("SELECT m.id FROM metki m JOIN usermetki um ON um.metka_id=m.id WHERE um.moment_id=? AND um.user_id=? GROUP BY (m.metka) ORDER BY m.metka"))		{			$result->bind_param("ii",$moment_id,$this->user->id);			$result->execute();			$result->bind_result($metka);			while($result->fetch()) $label_ids[] = $metka;			$result->close();		}				return $label_ids;	}		function getPeoplesByTags($tags)	{		if (count($tags)>0)		{			// getting user ids and moment ids from usermetki			$sql = "SELECT user_id, moment_id FROM usermetki WHERE metka_id IN (".implode(',',$tags).") AND user_id<>".$this->user->id;						if ($result = $this->mysqli->query($sql))			{				while ($mo = $result->fetch_object())				{					$people[$mo->user_id]->moment_id[]=$mo->moment_id;				}								$result->close();			}									if (empty($people)) return false;												foreach ($people as $p=>$m)			{				foreach ($m->moment_id as $mid)				{					$people[$p]->moments[$mid]->name = $this->getMomentName($mid);				}								unset($people[$p]->moment_id);			}									foreach ($people as $p=>$m)			{				$people[$p]->user=$this->getHuman($p);								foreach ($m as $g)				{					foreach ($g as $i=>$c)					{						// var_dump($p,$i,$c->name);						// p is the user id, i is the moment id, need to find a tags						$sql = "SELECT metka_id FROM usermetki WHERE user_id=? AND moment_id=? AND user_id<>".$this->user->id;												if ($result = $this->mysqli->prepare($sql))						{							$result->bind_param("ii",$p,$i);							$result->execute();							$result->bind_result($metka_id);							while ($result->fetch())							{								$people[$p]->moments[$i]->labels[]=$metka_id;							}							$result->close();						}					}				}			}					}				return $people;	}		// getting a user by id	function GetHuman($id)	{		$sql = "SELECT up.username FROM userprofile up  JOIN user u ON u.id=up.user_id AND up.user_id=? AND u.id<>? LIMIT 1";						if ($result = $this->mysqli->prepare($sql))		{			$result->bind_param("ii",$id,$this->user->id);			$result->execute();			$result->bind_result($username);			while ($result->fetch())			{				$human->username=$username;			}			$result->close();		}		return $human;	}	}